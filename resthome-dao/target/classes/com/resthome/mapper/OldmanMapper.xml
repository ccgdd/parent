<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.resthome.mapper.OldmanMapper" >
  <resultMap id="BaseResultMap" type="com.resthome.pojo.Oldman" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="orgn" property="orgn" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="in_cost" property="inCost" jdbcType="VARCHAR" />
    <result column="in_costed" property="inCosted" jdbcType="VARCHAR" />
    <result column="checkIn_date" property="checkinDate" jdbcType="VARCHAR" />
    <result column="person_name" property="personName" jdbcType="VARCHAR" />
    <result column="person_date" property="personDate" jdbcType="VARCHAR" />
    <result column="begin_date" property="beginDate" jdbcType="VARCHAR" />
    <result column="end_date" property="endDate" jdbcType="VARCHAR" />
    <result column="with_name" property="withName" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="handle_name" property="handleName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, number, sex, birthday, age, orgn, address, state, in_cost, in_costed, checkIn_date, 
    person_name, person_date, begin_date, end_date, with_name, reason, handle_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.resthome.pojo.OldmanExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oldman
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from oldman
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from oldman
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.resthome.pojo.OldmanExample" >
    delete from oldman
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.resthome.pojo.Oldman" >
    insert into oldman (id, name, number, 
      sex, birthday, age, orgn, 
      address, state, in_cost, 
      in_costed, checkIn_date, person_name, 
      person_date, begin_date, end_date, 
      with_name, reason, handle_name
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{age,jdbcType=INTEGER}, #{orgn,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, #{inCost,jdbcType=VARCHAR}, 
      #{inCosted,jdbcType=VARCHAR}, #{checkinDate,jdbcType=VARCHAR}, #{personName,jdbcType=VARCHAR}, 
      #{personDate,jdbcType=VARCHAR}, #{beginDate,jdbcType=VARCHAR}, #{endDate,jdbcType=VARCHAR}, 
      #{withName,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, #{handleName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.resthome.pojo.Oldman" >
    insert into oldman
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="orgn != null" >
        orgn,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="inCost != null" >
        in_cost,
      </if>
      <if test="inCosted != null" >
        in_costed,
      </if>
      <if test="checkinDate != null" >
        checkIn_date,
      </if>
      <if test="personName != null" >
        person_name,
      </if>
      <if test="personDate != null" >
        person_date,
      </if>
      <if test="beginDate != null" >
        begin_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="withName != null" >
        with_name,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="handleName != null" >
        handle_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="orgn != null" >
        #{orgn,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="inCost != null" >
        #{inCost,jdbcType=VARCHAR},
      </if>
      <if test="inCosted != null" >
        #{inCosted,jdbcType=VARCHAR},
      </if>
      <if test="checkinDate != null" >
        #{checkinDate,jdbcType=VARCHAR},
      </if>
      <if test="personName != null" >
        #{personName,jdbcType=VARCHAR},
      </if>
      <if test="personDate != null" >
        #{personDate,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        #{beginDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="withName != null" >
        #{withName,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="handleName != null" >
        #{handleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.resthome.pojo.OldmanExample" resultType="java.lang.Integer" >
    select count(*) from oldman
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update oldman
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.age != null" >
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.orgn != null" >
        orgn = #{record.orgn,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.inCost != null" >
        in_cost = #{record.inCost,jdbcType=VARCHAR},
      </if>
      <if test="record.inCosted != null" >
        in_costed = #{record.inCosted,jdbcType=VARCHAR},
      </if>
      <if test="record.checkinDate != null" >
        checkIn_date = #{record.checkinDate,jdbcType=VARCHAR},
      </if>
      <if test="record.personName != null" >
        person_name = #{record.personName,jdbcType=VARCHAR},
      </if>
      <if test="record.personDate != null" >
        person_date = #{record.personDate,jdbcType=VARCHAR},
      </if>
      <if test="record.beginDate != null" >
        begin_date = #{record.beginDate,jdbcType=VARCHAR},
      </if>
      <if test="record.endDate != null" >
        end_date = #{record.endDate,jdbcType=VARCHAR},
      </if>
      <if test="record.withName != null" >
        with_name = #{record.withName,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.handleName != null" >
        handle_name = #{record.handleName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update oldman
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      age = #{record.age,jdbcType=INTEGER},
      orgn = #{record.orgn,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      in_cost = #{record.inCost,jdbcType=VARCHAR},
      in_costed = #{record.inCosted,jdbcType=VARCHAR},
      checkIn_date = #{record.checkinDate,jdbcType=VARCHAR},
      person_name = #{record.personName,jdbcType=VARCHAR},
      person_date = #{record.personDate,jdbcType=VARCHAR},
      begin_date = #{record.beginDate,jdbcType=VARCHAR},
      end_date = #{record.endDate,jdbcType=VARCHAR},
      with_name = #{record.withName,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      handle_name = #{record.handleName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.resthome.pojo.Oldman" >
    update oldman
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="orgn != null" >
        orgn = #{orgn,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="inCost != null" >
        in_cost = #{inCost,jdbcType=VARCHAR},
      </if>
      <if test="inCosted != null" >
        in_costed = #{inCosted,jdbcType=VARCHAR},
      </if>
      <if test="checkinDate != null" >
        checkIn_date = #{checkinDate,jdbcType=VARCHAR},
      </if>
      <if test="personName != null" >
        person_name = #{personName,jdbcType=VARCHAR},
      </if>
      <if test="personDate != null" >
        person_date = #{personDate,jdbcType=VARCHAR},
      </if>
      <if test="beginDate != null" >
        begin_date = #{beginDate,jdbcType=VARCHAR},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=VARCHAR},
      </if>
      <if test="withName != null" >
        with_name = #{withName,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="handleName != null" >
        handle_name = #{handleName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.resthome.pojo.Oldman" >
    update oldman
    set name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      age = #{age,jdbcType=INTEGER},
      orgn = #{orgn,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      in_cost = #{inCost,jdbcType=VARCHAR},
      in_costed = #{inCosted,jdbcType=VARCHAR},
      checkIn_date = #{checkinDate,jdbcType=VARCHAR},
      person_name = #{personName,jdbcType=VARCHAR},
      person_date = #{personDate,jdbcType=VARCHAR},
      begin_date = #{beginDate,jdbcType=VARCHAR},
      end_date = #{endDate,jdbcType=VARCHAR},
      with_name = #{withName,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      handle_name = #{handleName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  <sql id="oldmanQueryVo">
		<where>
			<if test="name != null and name != ''">
				AND o.name LIKE '%${name}%'
			</if>
			<if test="number != null and number != ''">
				AND o.number = #{number}
			</if>
			<if test="age != null and age != ''">
				AND o.age = #{age}
			</if>
		</where>
	</sql>

	<!-- 根据queryVo分页查询数据 -->
	<select id="queryOldmanByQueryVo" parameterType="com.resthome.pojo.QueryVo"
		resultMap="BaseResultMap">
		  SELECT
			*
		  FROM
		oldman o
		<include refid="oldmanQueryVo" />
		
	</select>
	
<!-- 	List<Age> findGroupByAge(); -->

	<select id="findGroupByAge" resultType="com.resthome.pojo.Age">
	
		SELECT oldman.age , count(*) count FROM oldman GROUP BY age
	
		
	</select>
	
</mapper>